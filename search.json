[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 tower authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"ixpantia, SRL. Copyright holder. Andres Quintero. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Quintero (2024). tower: Easy Middle Ware Library Shiny. R package version 0.1.0.","code":"@Manual{,   title = {tower: Easy Middle Ware Library for Shiny},   author = {Andres Quintero},   year = {2024},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"tower","dir":"","previous_headings":"","what":"Easy Middle Ware Library for Shiny","title":"Easy Middle Ware Library for Shiny","text":"Dead simple middleware R Shiny.","code":""},{"path":"/index.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"Easy Middle Ware Library for Shiny","text":"tower simple library adding middleware Shiny applications. inspired tower crate Rust. designed enable package authors Shiny developers extend Shiny little bit usually possible. can use tower add middlewares forward, modify, intercept requests Shiny applications. can useful adding logging, authentication, caching, routing Shiny applications.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easy Middle Ware Library for Shiny","text":"can install development version tower GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"ixpantia/tower\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Easy Middle Ware Library for Shiny","text":"may want add new route Shiny application adds count counter every time user visits route. can tower adding middleware intercepts request increments counter. run code visit route /increment browser, see counter increment every time visit route.","code":"library(shiny) library(tower)  # Counter environment COUNTER <- new.env() COUNTER$counter <- 0  # Middleware to increment the counter increment_counter <- function(req) {   if (req$PATH_INFO == \"/increment\") {     COUNTER$counter <- COUNTER$counter + 1     return(       httpResponse(         200,         \"text/plain\",         paste(\"Counter is now\", COUNTER$counter)       )     )   } }  # A very empty Shiny app (not necessary for the demo) ui <- fluidPage() server <- function(input, output, session) {}  shinyApp(ui, server) |>   create_tower() |>   add_http_layer(increment_counter) |>   build_tower()"},{"path":"/index.html","id":"how-it-works","dir":"","previous_headings":"","what":"How it works","title":"Easy Middle Ware Library for Shiny","text":"Basically, tower adds layers Shiny application. layer function takes request returns either response NULL. layer returns response, response sent client request forwarded next layer. layer returns NULL, request forwarded next layer.","code":""},{"path":"/reference/add_http_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an HTTP layer to a tower — add_http_layer","title":"Add an HTTP layer to a tower — add_http_layer","text":"Add HTTP layer tower. layer called Shiny app's httpHandler.","code":""},{"path":"/reference/add_http_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an HTTP layer to a tower — add_http_layer","text":"","code":"add_http_layer(tower, layer)"},{"path":"/reference/add_http_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an HTTP layer to a tower — add_http_layer","text":"tower tower layer function takes request returns either response NULL. NULL indicates layer short-circuit request, therefore next layer called. response returned, request short-circuited response returned client.","code":""},{"path":"/reference/add_http_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an HTTP layer to a tower — add_http_layer","text":"tower layer added","code":""},{"path":"/reference/add_server_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a server layer to a tower — add_server_layer","title":"Add a server layer to a tower — add_server_layer","text":"Add server layer tower. layer run Shiny app's server function. useful adding custom logic server function without modifying original server function.","code":""},{"path":"/reference/add_server_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a server layer to a tower — add_server_layer","text":"","code":"add_server_layer(tower, layer)"},{"path":"/reference/add_server_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a server layer to a tower — add_server_layer","text":"tower tower layer function takes input, output, session return value. function called original server function. want short-circuit server use exception.","code":""},{"path":"/reference/add_server_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a server layer to a tower — add_server_layer","text":"tower layer added","code":""},{"path":"/reference/app_into_parts.html","id":null,"dir":"Reference","previous_headings":"","what":"Into parts — app_into_parts","title":"Into parts — app_into_parts","text":"Splits shiny.appobj parts, ui server","code":""},{"path":"/reference/app_into_parts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Into parts — app_into_parts","text":"","code":"app_into_parts(app)"},{"path":"/reference/app_into_parts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Into parts — app_into_parts","text":"app shiny.appobj","code":""},{"path":"/reference/app_into_parts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Into parts — app_into_parts","text":"list ui server handlers","code":""},{"path":"/reference/build_tower.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a Shiny app from a tower — build_tower","title":"Build a Shiny app from a tower — build_tower","text":"Build Shiny app tower. create new Shiny app specified layers added.","code":""},{"path":"/reference/build_tower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a Shiny app from a tower — build_tower","text":"","code":"build_tower(tower)"},{"path":"/reference/build_tower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a Shiny app from a tower — build_tower","text":"tower tower","code":""},{"path":"/reference/build_tower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a Shiny app from a tower — build_tower","text":"Shiny app object","code":""},{"path":"/reference/create_tower.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new tower — create_tower","title":"Create a new tower — create_tower","text":"Create new tower build upon.","code":""},{"path":"/reference/create_tower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new tower — create_tower","text":"","code":"create_tower(app)"},{"path":"/reference/create_tower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new tower — create_tower","text":"app shiny app object","code":""},{"path":"/reference/create_tower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new tower — create_tower","text":"new tower","code":""},{"path":"/reference/print.tower.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a tower — print.tower","title":"Print a tower — print.tower","text":"Print tower","code":""},{"path":"/reference/print.tower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a tower — print.tower","text":"","code":"# S3 method for tower print(x, ...)"},{"path":"/reference/print.tower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a tower — print.tower","text":"x tower ... Ignored arguments (compatibility print)","code":""}]
